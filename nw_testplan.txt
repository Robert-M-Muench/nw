TODO
------------------------------------------------------------------------------
easy:
	- capslock/numlock bug
	- keychar events
	- check that key state query is not async in key events, including keychar!
	- mouse movement event coalescing?
	- mouse movement history
	- query mouse position and button state
	- set mouse position? XWarpPointer

	- hide cursor (but otherwise act normal)
	- standard cursor
	- custom image cursor
	- high dpi
	- frame_extents()
	- active=false init flag
	- shm painting
	- cairo view
	- gl view
	- subregion repaint()

hard:
	- activable
	- enabled
	- why expose is sent while minimized
	- test invalidate(x, y, w, h)
	- jank control?
	- check that mouse and keyboard state are always in sync and never polled


APP
------------------------------------------------------------------------------
events:
	window_created
	window_closed
	activated deactivated
	was_unhidden was_hidden

WINDOW
------------------------------------------------------------------------------

read-only fixed properties:
	parent
	frame
	minimizable
	maximizable
	activable
	fullscreenable
	resizeable
	closeable
	transparent
	topmost

read-only state properties:
	dead
	visible
	minimized maximized fullscreen state
	size frame_rect client_rect normal_rect
	display
	active
	children
	bitmap
	mouse
	key

read-write inert properties:
	title
	sticky
	autoquit
	edgesnapping

read-write state properties:
	enabled
	minsize maxsize
	size frame_rect client_rect normal_rect
	cursor

utilities:
	to_client to_screen

commands:
	close
	show hide
	minimize maximize restore shownormal
	activate
	raise lower
	invalidate

events:
	quitting
	closing
	resizing
	magnets
	created closed
	activated deactivated
	was_shown was_hidden
	was_minimized was_unminimized
	was_maximized was_unmaximized
	entered_fullscreen exited_fullscreen
	start_resize end_resize resizing resized
	displays_changed
	keydown keypress keyup keychar
	mousedown mouseup
	mousewheel mousehwheel
	mouseenter mouseleave
	mousemove
	repaint free_bitmap

meta:
	observe
	override
	events
	event

extra:
	views view_count
	menubar popup
	icon
	glview cairoview
events:
	dropfiles dragging

------------------------------------------------------------------------------


------------------------------------------------------------------------------
init | action | change | get | query | event | flag || assert | check
------------------------------------------------------------------------------


TO-REMOVE
------------------------------------------------------------------------------
- init: transparent (not working on windows / remote desktop)


INIT/PLATFORM VERSION
------------------------------------------------------------------------------
- os version checks
	- assert: windows
	- assert: osx
	- assert: linux


LOOP
------------------------------------------------------------------------------
- assert: activation events start after loop starts
- assert: loop can end and be started again
- get: running
- TODO...


TIMERS
------------------------------------------------------------------------------
- assert: runevery() works and return false stops the timer
- TODO...


RESTRICTIONS
------------------------------------------------------------------------------
- init: minimizable
	- assert: not minimized
	- check: no minimize button/command/shortcut
- init: maximizable
	- assert: not maximized
	- check: no maximize button/command/shortcut
- init: not minimizable and not maximizable
	- check: hide instead of disabling the buttons
- init: not minimizable xor not maximizable
	- check: disable instead of hiding the buttons
- init: resizeable
	- check: not resize edges/corners/command/shortcut
	- assert: resize() works
	- assert: not maximizable
	- assert: not fullscreenable
	- assert: default not maximizable
	- assert: default not fullscreenable
- init: fullscreenable
	- assert: not fullscreen
	- check: no fullscreen button/command/shortcut
- init: closeable
	- check: no close button/command/shortcut
- init: activable
	- implement


TOPMOST
------------------------------------------------------------------------------
- init: topmost
	- check: stays on top
- action: topmost=true
	- assert: activated event if behind
	- check: raising and activating if behind
- action: topmost=false
	- assert: activated event if other topmost behind
	- check: lowering and activating other window if other topmost behind


PARENT
------------------------------------------------------------------------------
- init: parent
	- check: not on taskbar
	- assert: stays above parent
	- assert: not minimizable
	- assert: default not minimizable


FRAME=NONE
------------------------------------------------------------------------------
- init: frame=none
	- check: no frame
	- assert: frame rect == client rect


FRAME=TOOLBOX
------------------------------------------------------------------------------
- init: frame=toolbox
	- assert: has parent
	- check: has toolbox frame (windows)


POSITIONING
------------------------------------------------------------------------------
- init: client size
	- assert: client size
- init: outer size
	- assert: outer size
- init: client pos
- init: outer pos
- init: app frame_rect <-> client_rect conv.
- assert: strictly bigger/smaller size
- init: default pos (cascade)
	- check: screen pos (cascade)
- init: client pos/size vs outer pos/size
	- check: side-by-side pos/side
- get: frame rect
- get: client rect
- change: frame rect
- change: client rect
- get: minsize/maxsize
- change: minsize/maxsize
- event: changed min/max/fullscr/visible/z-index
- query: resizing
- event: resized
- event: moved


SIZE RESTRICTIONS
------------------------------------------------------------------------------
- init: minsize/maxsize
	- assert: maxsize clamped to minsize
	- assert: client size respects it
	- assert: resize respects it
	- check: resizing respects it
	- assert: maxsize == minsize => resizeable = false (X limitation)
	- assert: no resized event
- change: minsize
	- assert: clamped to maxsize
- change: maxsize
	- assert: clamped to minsize
- change: minsize or maxsize
	- assert: window resized
	- assert: resized event
	- check: resizing respects it
	- assert: maxsize == minsize => resizeable = false (X limitation)


STATE
------------------------------------------------------------------------------
- init: visible=default
	* assert: visible
	* check: visible
	* assert: synchronous changed event
	- event: was_shown
- init: visible=false
	* assert: not visible
	* check: not visible
- init: maximized
	- assert/check: maximized -> normal
	- event: was_shown

- init: minimized
	- check: not activated
	* assert: minimized -> normal
	- check: minimized -> normal
- init: minimized + maximized
	- check: not activated
	- assert: minimized, maximized
	- assert/check: restore -> maximized -> normal

- init: fullscreen
	- assert/check: fullscreen -> normal
- init: minimized + fullscreen
	- check: not activated
	- assert: minimized, fullscreen
	- assert/check: restore -> fullscreen -> normal
- init: maximized + fullscreen
	- assert: maximized, fullscreen
	- assert/check: restore -> maximized -> normal
- init: minimized + maximized + fullscreen (?)
	- check: not activated
	- assert: minimized, maximized, fullscreen
	- assert/check: restore -> fullscreen -> maximized -> normal

- action: hide
	- assert: hidden -> ignore
	- assert: save minimized state
	- assert: hide children
	- assert: changed event
- action: show
	- assert: visible -> ignore
	- assert: minimized -> not minimized
	- assert: show children
	- assert: changed event
	- assert: raise
	- assert: activate
- action: minimize
	- assert: minimized -> ignore
	- assert: hidden -> visible
	- assert: not activated
- action: restore
	- assert: ignore if normal visible
	- assert: show if hidden
	- assert: hidden + minimized -> minimized + not activating
	- assert: minimized -> normal
	- assert: maximized -> normal
	- assert: maximized + minimized -> maximized
	- assert: fullscreen -> normal
	- assert: maximized + fullscreen -> maximized
- action: maximize
	- assert: maximized -> ignore
	- assert: hidden -> visible
	- assert: minimized -> maximized
- action: shownormal
	- assert: hidden -> visible
	- assert: maximized -> normal
	- assert: minimized -> normal
	- assert: minimized + maximized -> normal
	- assert: fullscreen -> normal
	- assert: maximized + fullscreen -> maximized
- action: enter fullscreen
	- assert: normal -> fullscreen
	- assert: maximized -> fullscreen
	- assert: minimized -> fullscreen
	- assert: minimized + maximized -> fullscreen
	- event: entered_fullscreen
- action: exit fullscreen
	- assert:
	- event: exited_fullscreen

- event: was_minimized
	- normal -> minimize
	- maximized -> minimize
	-
- event: was_unminimized
	- maximized, minimized -> restore
- event: was_maximized
	- normal -> maximize
- event: was_unmaximized
	- maximized -> restore
- event: was_shown
	- hidden -> show
- event: was_hidden
	- normal -> hidden
- event: entered_fullscreen
- event: exited_fullscreen


TITLE
------------------------------------------------------------------------------
- init: title
	- assert: get
	- check: on taskbar and titlebar
- get: title
	- assert: get
- change: title
	- assert: get


ENABLED
------------------------------------------------------------------------------
- init: enabled=false
	- assert: get
	- check: not enabled
- get: enabled
- set: enabled=true/false
	- assert: get
	- check: enabled/disabled


CLOSING
------------------------------------------------------------------------------
- query: closing
- action: close
	- assert: deactivate and changed events precede closed event
- event: closed


QUITTING
------------------------------------------------------------------------------
- query: quitting
- event: quit
- flag: app autoquit
- flag: window autoquit
- action: quit


ACTIVATION
------------------------------------------------------------------------------
- event: activate win
- event: deactivate win
- action: activate win
	- assert: make hidden window visible
	- assert: make minimized window visible?
- event: activate app
- event: deactivate app
- action: hide app (osx)
- action: show app (osx)
- event: app hidden (osx)
- event: app shown (osx)
- action: activate app


STACKING
------------------------------------------------------------------------------
- action: raise
- action: lower
- action: raise_above win
- action: lower_below win


DISPLAYS
------------------------------------------------------------------------------
- get: displays
- get: main display
- get: active display
- get: display of window


KEYBOARD
------------------------------------------------------------------------------
- event: keydown
- event: keyup
- event: keypress
- get: key state
- get: keyboard state


MOUSE
------------------------------------------------------------------------------
- event: mouse down
- event: mouse up
- event: mouse click
- event: mouse dblclick
- event: mouse tripleclick
- event: mouse n-click


RENDERING
------------------------------------------------------------------------------
- event: repaint
- get: writable bitmap
- action: invalidate (only subregion)
- action: opengl set current


CURSOR
------------------------------------------------------------------------------
- change: named cursor
- change: default cursor
- action: show cursor
- action: hide cursor
- get: writable cursor image
- action: send event with custom data from a different thread


VIEWS
------------------------------------------------------------------------------
- anchors
- client <-> window coord conv
- mouse enter / mouse leave / mouse move events
- control event propagation
- overlapping = undefined behavior


X PING
------------------------------------------------------------------------------
- check: refusing to close + not responding to ping + kill works
- check: refusing to close + responding to ping does not bring kill window

MAGNETS
------------------------------------------------------------------------------
- check: sticking to (screen|app windows|all windows) works

MENUS
------------------------------------------------------------------------------
- ...
- APP MENU BAR (osx)
- WINDOW MENU BAR (windows) / POPUP MENU (windows, osx)
- POPUP MENU (windows, osx)

NOTIFICATION ICONS (windows, osx)
------------------------------------------------------------------------------
- check: bitmap draw / animation

WINDOW ICON (windows) / DOCK ICON (osx)
------------------------------------------------------------------------------
- check: bitmap draw / animation

FILE CHOOSER
------------------------------------------------------------------------------
- check: open file chooser
- check: save file chooser

CLIPBOARD
------------------------------------------------------------------------------
- check: copy/paste text
- check: copy/paste files
- check: copy/paste bitmaps

DRAG & DROP
------------------------------------------------------------------------------
- drop files
- ...

ISSUES
------------------------------------------------------------------------------
- review frontend/backend split
- remove undefined behavior (asserts)
- ensure consistent behavior / document inconsistent behavior (async; events)


GLFW feats (excluding OpenGL)
------------------------------------------------------------------------------
- disable cursor and lock it to a window (not sure how this works)
- get monitor name
- xinput 2 for subpixel cursor motion?
- xkb-based detectable autorepeat (with fallback to X)


OpenGL feats
------------------------------------------------------------------------------
- choosing context version
- multi-sampling
- vsync
- gama ramp
- double/single buffering
- full screen video modes
- enable hi-dpi backbuffer (OSX)


LOG
------------------------------------------------------------------------------
23/07 - inventory
24/07 - list of tests
25/07 - starting state tests
26/07 - talk about what to remove (nothing); more tests
27/07 - testing states (made transitions synchronous)
28/07 - replaced sleep with select in loop; state-change events for Linux and Windows
29/07 - state transitions async test factory; app:run(func) + app:sleep(); errors in timers (windows); was_shown and was_hidden
30/07 - ?
31/07 - all-in-one interactive test
01/07 - day off
02/08 - ?
03/08 - xlib mouse
04/08 - xlib keyboard; reading glfw docs & code
05/08 - french layout in osx and windows; reading about winapi's hi-dpi
06/08 - documetned & published ringbuffer; installed win8.1; tested all hi-dpi API
07/08 - hi-dpi secondary monitor; tested cocoa hi-dpi change event and unscaled rendering
07/08 - fixed cbframe regression; cbframe cpu stack;
